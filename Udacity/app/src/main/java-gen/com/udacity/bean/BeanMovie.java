package com.udacity.bean;

import android.os.Parcel;
import android.os.Parcelable;

import org.greenrobot.greendao.annotation.*;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit.
/**
 * Entity mapped to table "BeanMovie".
 */
@Entity(nameInDb = "BeanMovie")
public class BeanMovie implements Parcelable {

    @Id(autoincrement = true)
    private Long id;
    private String poster_path;
    private Boolean adult;
    private String overview;
    private String release_date;
    private String genre_ids;
    private Integer movie_id;
    private String original_title;
    private String original_language;
    private String title;
    private String backdrop_path;
    private Float popularity;
    private Integer vote_count;
    private Boolean video;
    private Float vote_average;
    private Integer movie_type;
    private Boolean favorite;

    @Generated
    public BeanMovie() {
    }

    public BeanMovie(Long id) {
        this.id = id;
    }

    @Generated
    public BeanMovie(Long id, String poster_path, Boolean adult, String overview, String release_date, String genre_ids, Integer movie_id, String original_title, String original_language, String title, String backdrop_path, Float popularity, Integer vote_count, Boolean video, Float vote_average, Integer movie_type, Boolean favorite) {
        this.id = id;
        this.poster_path = poster_path;
        this.adult = adult;
        this.overview = overview;
        this.release_date = release_date;
        this.genre_ids = genre_ids;
        this.movie_id = movie_id;
        this.original_title = original_title;
        this.original_language = original_language;
        this.title = title;
        this.backdrop_path = backdrop_path;
        this.popularity = popularity;
        this.vote_count = vote_count;
        this.video = video;
        this.vote_average = vote_average;
        this.movie_type = movie_type;
        this.favorite = favorite;
    }

    protected BeanMovie(Parcel in) {
        poster_path = in.readString();
        overview = in.readString();
        release_date = in.readString();
        genre_ids = in.readString();
        original_title = in.readString();
        original_language = in.readString();
        title = in.readString();
        backdrop_path = in.readString();
    }

    public static final Creator<BeanMovie> CREATOR = new Creator<BeanMovie>() {
        @Override
        public BeanMovie createFromParcel(Parcel in) {
            return new BeanMovie(in);
        }

        @Override
        public BeanMovie[] newArray(int size) {
            return new BeanMovie[size];
        }
    };

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getPoster_path() {
        return poster_path;
    }

    public void setPoster_path(String poster_path) {
        this.poster_path = poster_path;
    }

    public Boolean getAdult() {
        return adult;
    }

    public void setAdult(Boolean adult) {
        this.adult = adult;
    }

    public String getOverview() {
        return overview;
    }

    public void setOverview(String overview) {
        this.overview = overview;
    }

    public String getRelease_date() {
        return release_date;
    }

    public void setRelease_date(String release_date) {
        this.release_date = release_date;
    }

    public String getGenre_ids() {
        return genre_ids;
    }

    public void setGenre_ids(String genre_ids) {
        this.genre_ids = genre_ids;
    }

    public Integer getMovie_id() {
        return movie_id;
    }

    public void setMovie_id(Integer movie_id) {
        this.movie_id = movie_id;
    }

    public String getOriginal_title() {
        return original_title;
    }

    public void setOriginal_title(String original_title) {
        this.original_title = original_title;
    }

    public String getOriginal_language() {
        return original_language;
    }

    public void setOriginal_language(String original_language) {
        this.original_language = original_language;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getBackdrop_path() {
        return backdrop_path;
    }

    public void setBackdrop_path(String backdrop_path) {
        this.backdrop_path = backdrop_path;
    }

    public Float getPopularity() {
        return popularity;
    }

    public void setPopularity(Float popularity) {
        this.popularity = popularity;
    }

    public Integer getVote_count() {
        return vote_count;
    }

    public void setVote_count(Integer vote_count) {
        this.vote_count = vote_count;
    }

    public Boolean getVideo() {
        return video;
    }

    public void setVideo(Boolean video) {
        this.video = video;
    }

    public Float getVote_average() {
        return vote_average;
    }

    public void setVote_average(Float vote_average) {
        this.vote_average = vote_average;
    }

    public Integer getMovie_type() {
        return movie_type;
    }

    public void setMovie_type(Integer movie_type) {
        this.movie_type = movie_type;
    }

    public Boolean getFavorite() {
        return favorite;
    }

    public void setFavorite(Boolean favorite) {
        this.favorite = favorite;
    }

    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(poster_path);
        dest.writeString(overview);
        dest.writeString(release_date);
        dest.writeString(genre_ids);
        dest.writeString(original_title);
        dest.writeString(original_language);
        dest.writeString(title);
        dest.writeString(backdrop_path);
    }
}
